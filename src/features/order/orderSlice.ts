import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../app/store';
import {
  ProductState,
} from '../product/productSlice';

export interface OrderArrayState extends Array<OrderState>{}

export interface AddressState {
  firstname: string;
  lastname: string;
  email: string;
  address: string;
  country: string;
  state: string;
  zipcode: string;
}

export interface OrderState {
  id: number;
  title: string;
  desc: string;
  price: string;
  quantity: number;
  capacity: string;
}

export interface PaymentState {
  type: string;
  name: string;
  credit_card_number: string;
  expiration: Date;
  cvv: string;
}

export interface OrderAddressState {
  order: OrderArrayState;
  address: AddressState;
  payment: PaymentState;
}

const initialState: OrderAddressState = {
  "order": [
  ],
  "address": {
    "firstname": "",
    "lastname": "",
    "email": "",
    "address": "",
    "country": "",
    "state": "",
    "zipcode": ""
  },
  "payment": {
    "type": "",
    "name": "",
    "credit_card_number": "",
    "expiration": new Date(),
    "cvv": ""
  }
};

export const orderSlice = createSlice({
  name: 'order',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    // Use the PayloadAction type to declare the contents of `action.payload`
    setOrder: (state, action: any) => {
      state.order = action.payload;
    },
    setAddress: (state, action: any) => {
      state.address = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    
  },
});

export const { setOrder, setAddress } = orderSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectOrder = (state: RootState) => state.order.order;
export const selectAddress = (state: RootState) => state.order.address;
export const selectPayment = (state: RootState) => state.order.payment;
// export const selectStatus = (state: RootState) => state.counter.status;

export default orderSlice.reducer;
