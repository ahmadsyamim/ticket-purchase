import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../app/store';

export interface ProductArrayState extends Array<ProductState>{}

export interface ProductState {
  id: number;
  title: string;
  date: string;
  organizer: string;
  image: string;
  venue: string;
  price: string;
  desc: string;
  venue_address: string;
  tickets: {
    id: number;title: string;desc: string;price: string;quantity: number;capacity: string;
  } [];
}

const initialState: ProductArrayState = [
  {
    "id": 1,
    "title": "Event 01",
    "date": "2015-01-01",
    "organizer": "Organizer",
    "image" : "/images/img01.jpg",
    "venue": "Hall 1",
    "price": "3",
    "desc": "descriptions",
    "venue_address": "Kuala Lumpur Jalan Ampang 50450",
    "tickets": [
      {
        "id": 1,
        "title": "free",
        "desc": "desc1",
        "price": "0",
        "quantity": 0,
        "capacity": "10"
      },
      {
        "id": 2,
        "title": "tier1",
        "desc": "desc2",
        "price": "100",
        "quantity": 0,
        "capacity": "10"
      }
    ]
  },
  {
    "id": 2,
    "title": "Event 02",
    "date": "2015-01-01",
    "organizer": "Organizer",
    "image" : "/images/img02.jpg",
    "venue": "Hall 1",
    "price": "3",
    "desc": "descriptions",
    "venue_address": "Kuala Lumpur Jalan Ampang 50450",
    "tickets": [
      {
        "id": 3,
        "title": "free",
        "desc": "desc1",
        "price": "0",
        "quantity": 0,
        "capacity": "10"
      },
      {
        "id": 4,
        "title": "tier1",
        "desc": "desc2",
        "price": "100",
        "quantity": 0,
        "capacity": "10"
      },
      {
        "id": 5,
        "title": "tier2",
        "desc": "desc3",
        "price": "125",
        "quantity": 0,
        "capacity": "10"
      }
    ]
  },
];


export const productSlice = createSlice({
  name: 'product',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
  },
});

// export const { increment, decrement, incrementByAmount } = productSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectProduct = (state: RootState) => state.product;
// export const selectStatus = (state: RootState) => state.product.status;

export default productSlice.reducer;
